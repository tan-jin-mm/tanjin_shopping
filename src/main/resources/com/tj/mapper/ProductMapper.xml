<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tj.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.tj.pojo.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
    <result column="main_image" jdbcType="VARCHAR" property="mainImage" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sub_image" jdbcType="LONGVARCHAR" property="subImage" />
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tj_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tj.pojo.Product"
  useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tj_product (category_id, name,
      subtitle, main_image, price, 
      stock, status, create_time, 
      update_time, sub_image, detail
      )
    values (#{categoryId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{subtitle,jdbcType=VARCHAR}, #{mainImage,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, now(),
      now(), #{subImage,jdbcType=LONGVARCHAR}, #{detail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tj.pojo.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tj_product
    set category_id = #{categoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      subtitle = #{subtitle,jdbcType=VARCHAR},
      main_image = #{mainImage,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_time = now(),
      sub_image = #{subImage,jdbcType=LONGVARCHAR},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, category_id, name, subtitle, main_image, price, stock, status, create_time, 
    update_time, sub_image, detail
    from tj_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, category_id, name, subtitle, main_image, price, stock, status, create_time, 
    update_time, sub_image, detail
    from tj_product
  </select>
  <!--
    商品上下架，更新商品状态
  -->
  <update id="updateProductKeySelective" parameterType="com.tj.pojo.Product" >
    update tj_product
    <set>
      <if test="categoryId!=null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="name!=null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="subtitle!=null" >
        subtitle = #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="price!=null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock!=null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="status!=null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="subImage!=null" >
        sub_image = #{subImage,jdbcType=LONGVARCHAR},
      </if>
      <if test="detail!=null" >
        detail = #{detail,jdbcType=LONGVARCHAR}
      </if>
      update_time = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--
    后台商品搜索，可以通过id精确查询，也可通过名称模糊查询，返回的还是分页对象
  -->
  <select id="findProductByProductIdAndProductName" parameterType="map" resultMap="BaseResultMap">
     select id, category_id, name, subtitle, main_image, price, stock, status, create_time,
    update_time, sub_image, detail
    from tj_product
    <where>
      <if test="productId!=null">
        and id = #{productId}
      </if>
      <if test="productName!=null">
        and name like "%"#{productName}"%"
      </if>
    </where>
  </select>
  <!--
      categoryIdList是集合，需要循环查询，keyWord是模糊查询
  -->
  <select id="searchProduct" parameterType="map" resultMap="BaseResultMap">
    select id, category_id, name, subtitle, main_image, price, stock, status, create_time,
    update_time, sub_image, detail
    from tj_product
    <where>
      <if test="categoryIdList!=null and categoryIdList.size>0">
        and category_id in
        <foreach collection="categoryIdList" item="categoryId" open="(" close=")" separator=",">
          #{categoryId}
        </foreach>
      </if>
      <if test="keyword!=null">
        and name like #{keyword}
      </if>
    </where>
  </select>
  <!--
      根据商品ID查库存
  -->
  <select id="findStockById" parameterType="int" resultMap="BaseResultMap">
    select stock from from tj_product where id=#{productId} for update
  </select>
</mapper>